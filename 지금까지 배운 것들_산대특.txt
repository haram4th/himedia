프론트엔드 관련
HTML , CSS, Javascript, Bootstrap, fontawesome
-----------------------------------------------------------------------------------------------------------------------------------------
백엔드관련 
Django: MTV 패턴, ORM을 활용한 sqlite3·postgresql 테이블 CRUD, 함수형 View, 클래스 View를 활용한 데이터 처리.
Web Server: Nginx 를 활용한 정적 파일 처리
Web Application Server:  Gunicorn을 활용한 동적 웹 어플리케이션 서버 구동
-----------------------------------------------------------------------------------------------------------------------------------------
배포 관련
AWS: amazon web service lightsail 이용
Docker: AWS lightsail에 docker-compose 를 활용해 django, postgre, nginx, gunicorn 서버 구동  

프론트 백엔드 프로젝트: 블로그 및 개인 소개 페이지 제작  ip 주소

-----------------------------------------------------------------------------------------------------------------------------------------
데이터베이스
sqlite3, postgresql, mysql 
- DDL(Data definition language) 를 이용한 데이터베이스 및 테이블 생성, 수정, 삭제
- DML(Data manipulation language)를 이용한 데이터 CRUD
- DCL(Data control language)를 이용한 사용자 생성, 권한 부여, 회수
- 표준 SQL을 이용한 CRUD 작업 및 table join

DB 툴
Workbench 8.0, Dbeaber 를 이용한 DB 원격 접속 및 SQL 작업

-----------------------------------------------------------------------------------------------------------------------------------------
Python
- 파이썬 기초 문법: 자료형, 반복문, 조건문, 람다함수, 함수, 클래스
- windows 에서 anaconda 가상환경 설정, python 가상환경 설정하기
- WSL·Ubuntu 에서 anaconda 가상환경, python 가상환경 설정하기

- 파이썬 미니 프로젝트: 텍스트 데이터 음성으로 읽어주기, 입력받은 외국어 문장을 파파고 API로 번역해 읽어주기, python 100제 문제 풀기 
-----------------------------------------------------------------------------------------------------------------------------------------
Python 데이터 수집
- requests를 활용한 정적 페이지 데이터 수집
- selenium을 활용한 동적 페이지 데이터 수집 

- 데이터 수집 미니 프로젝트
  - requsests: naver API를 이용한  책 검색 데이터 수집, 공공데이터 API를 활용한 전국 치킨집 데이터 수집, (구)yes24 베스트셀러 페이지 데이터 수집
  - selenium: 네이버 쇼핑 카테고리의 책 데이터 수집, (신)yes24 베스트 셀러 목록 및 상세 페이지, 리뷰 데이터 수집
-----------------------------------------------------------------------------------------------------------------------------------------
데이터 분석

데이터 로딩, 전처리, 시각화
- pandas를 활용한 파일 로딩 및 저장, 데이터 전처리 및 EDA(탐색적 데이터 분석)
- pandas와 Database 연동 - pymysql 및 sqlalchemy를 활용한 데이터 베이스 연동, 자료 추출 및 저장
- matplotlib과 folium을 이용한 데이터 시각화

scikit-learn을 이용한 머신러닝
  - 회귀분석: 회귀분석, 다중회귀분석, PCA 차원축소, 릿지, 라쏘, 엘라스틱넷을 이용한 최적화
  - 분류분석: 로지스틱 회귀분석, 의사결정나무, 앙상블(배깅, 부스팅(XGBoost, LightGBM), 랜덤 포레스트) 를 활용한 분류 분석
  - 자연어 분석: konlpy, 나이브베이즈, word cloud를 이용한 자연어 분석
  - 군집분석: 계층형 군집 분석, kmeans, dbscan를 활용한 비계층형 군집 분석
  - 모델 검증: confusion matrix, classification report를 활용한 모델 성능 검증
  - 클래스 불균형 해소: imbalanced-learn을 활용한 데이터 증폭 및 축소를 통해 클래스 불균형 문제 해결 및 모델 성능 개선
  - 모델 최적화: pipeline, gridsearch, randomsearch를 통한 다중 모델에 대한 하이퍼파라미터 튜닝 및 최적 모델 생성

미니 프로젝트: 아파트 실거래가 예측 시스템(다중 회귀 분석), 호텔스닷컴 사용자 리뷰 및 평점 분석(텍스트 감성 분류 분석),
                     지하철 이용객 데이터를 활용한 시각화(folium), 망고플래이트 가게별 사용자 리뷰 워드 클라우드 만들기,


tensorflow를 활용한 딥러닝
  - Windows WSL 환경에 tensorflow 및 cuda 개발 환경 설정하기
  - Windows 환경에 tensorflow 및 cuda 개발 환경 설정하기
  - numpy를 활용한 다차원 배열 생성 및 조작
  - Sequantial 을 활용한 절차적 방식의 딥러닝 모델 생성
  - 함수 및 클래스를 활용한 딥러닝 모델 생성
  - CNN을 활용한 이미지 분석
  - RNN, LSTM, attention을 활용한 텍스트 분석
  - early-stopping, best model 자동 저장하기
  - tensorflow hub의 사전 학습 모델을 활용한 전이학습으로 성능 향상 시키기

미니 프로젝트: 개, 고양이 분류(CNN, tensorflow_hub를 활용한 전이학습 분류), 호텔스닷컴 리뷰 감성분석(LSTM, Attention)


R을 활용한 머신러닝
  - R 및 R Studio 설치
  - R을 활용한 데이터 로드, 저장, 데이터 조작
  - ggplot2를 활용한 데이터 시각화
  - 회귀분석, 다중회귀분석, 의사결정나무, 랜덤포레스트

-----------------------------------------------------------------------------------------------------------------------------------------

대용량 데이터 처리

- virtual box를 이용한 ubuntu 설치 및 기본 명령어 활용
- 네트워트 설정 및 포트포워딩
- ssh 서버 설치 및 ssh를 활용한 원격 작업 
- 분산 파일 시스템 Hadoop 설치 및 클러스터 구성
- 분산 대량 데이터 처리 라이브러리 spark 설치 및 클러스터 구성
- pyspark를 활용한 데이터 로딩, 저장, 전처리
- pyspark를 활용한 회귀분석, 분류분석

-----------------------------------------------------------------------------------------------------------------------------------------

형상관리도구 git/github
 - git 설치 및 git 명령어
 - git hub repository 생성 및 remote 저장소 연결
 - git 으로 버전 관리하기
 - branch 생성 및 merge로 합치기










